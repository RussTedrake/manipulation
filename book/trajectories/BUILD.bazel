# -*- mode: python -*-
# vi: set ft=python :

# Copyright 2020-2024 Massachusetts Institute of Technology.
# Licensed under the BSD 3-Clause License. See LICENSE.TXT for details.

load("//book/htmlbook/tools/python:requirements.bzl", "requirement")
load("//book/htmlbook/tools/jupyter:defs.bzl", "rt_ipynb_test")

rt_ipynb_test(
    name = "interactive_ik",
    srcs = ["interactive_ik.ipynb"],
    deps = [
      "//manipulation",
      "//manipulation:meshcat_utils",
      "//manipulation:scenarios",
    ],
)

rt_ipynb_test(
    name = "cspace",
    srcs = ["cspace.ipynb"],
    data = ["//manipulation/models"],
    deps = [
      "//manipulation",
      "//manipulation:scenarios",
    ],
)

rt_ipynb_test(
    name = "gcs_derivatives",
    srcs = ["gcs_derivatives.ipynb"],
    deps = [ 
      requirement("drake"),
      requirement("ipython"),
    ],
)

rt_ipynb_test(
    name = "gcs_simple_2d_cspace",
    srcs = ["gcs_simple_2d_cspace.ipynb"],
    data = ["//manipulation/models"],
    deps = [
      "//manipulation",
      requirement("scipy"),
    ],
    tags = ["requires-network"], # For gurobi
)

# See https://github.com/RobotLocomotion/drake/issues/21343
#rt_ipynb_test(
#    name = "iris_in_configuration_space",
#    srcs = ["iris_in_configuration_space.ipynb"],
#    tags = ["requires-network"], # For gurobi
#    data = ["//manipulation/models"],
#    deps = [
#      "//manipulation",
#      "//manipulation:meshcat_utils",
#      "//manipulation:scenarios",
#    ],
#)

rt_ipynb_test(
    name = "iris_builder",
    srcs = ["iris_builder.ipynb"],
    deps = [
      "//manipulation",
      requirement("scipy"),
    ],
    data = ["//book/data:iiwa_shelve_and_bins_science_robotics.yaml"],
    tags = ["requires-network"], # For gurobi
)

rt_ipynb_test(
    name = "kinematic_trajectory_optimization",
    srcs = ["kinematic_trajectory_optimization.ipynb"],
    deps = [
      "//manipulation",
      "//manipulation:meshcat_utils",
      "//manipulation:scenarios",
    ],
)

rt_ipynb_test(
    name = "optimization_landscape",
    srcs = ["optimization_landscape.ipynb"],
    deps = [
      "//manipulation",
      "//manipulation:meshcat_utils",
      "//manipulation:scenarios",
    ],
)

rt_ipynb_test(
    name = "rrt",
    srcs = ["rrt.ipynb"],
    deps = [
      "//manipulation",
      "//manipulation:scenarios",
    ],
)